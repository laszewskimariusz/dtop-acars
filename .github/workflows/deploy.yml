name: Deploy Django App

on:
  push:
    tags:
      - '*'  # only on version tags

jobs:
  docker:
    runs-on: ubuntu-latest
    environment: HARBOR
    env:
      KUBECONFIG: ${{ github.workspace }}/kubeconfig.yaml
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DEBUG: "False"

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v4

      - name: Extract tag
        id: vars
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Harbor
        run: echo "${{ secrets.HARBOR_PASSWORD }}" \
          | docker login harbor.zatto-lab.cloud -u "${{ secrets.HARBOR_USERNAME }}" --password-stdin

      - name: Build and push image
        run: |
          docker build \
            -t harbor.zatto-lab.cloud/d-topsky/d-topsky:${{ env.TAG }} .
          docker push harbor.zatto-lab.cloud/d-topsky/d-topsky:${{ env.TAG }}

      - name: Checkout argo-manifest
        uses: actions/checkout@v4
        with:
          repository: laszewskimariusz/argo-manifest
          token: ${{ secrets.GH_PAT }}
          path: argo-manifest

      - name: Replace image tag in manifest
        run: |
          sed -i \
            "s|image: harbor.zatto-lab.cloud/d-topsky/d-topsky:.*|image: harbor.zatto-lab.cloud/d-topsky/d-topsky:${{ env.TAG }}|" \
            argo-manifest/apps/dtopsky/deployment.yaml

      - name: Commit & push manifest update
        run: |
          cd argo-manifest
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git commit -am "ci: bump d-topsky image â†’ ${{ env.TAG }}"
            git push
          fi

      - name: Write kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" > "$KUBECONFIG"

      - name: Create/update K8s secret
        run: |
          kubectl delete secret dtopsky-secrets -n dtopsky --ignore-not-found
          kubectl create secret generic dtopsky-secrets \
            --from-literal=SECRET_KEY="${{ env.SECRET_KEY }}" \
            --from-literal=ALLOWED_HOSTS="${{ env.ALLOWED_HOSTS }}" \
            --from-literal=DATABASE_URL="${{ env.DATABASE_URL }}" \
            --from-literal=DEBUG="${{ env.DEBUG }}" \
            -n dtopsky

      - name: Verify
        run: kubectl get pods -n dtopsky
