name: Deploy Django App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create .env file
      run: |
        echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" > .env
        echo "DEBUG=False" >> .env
        echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
    
    - name: Run Django check
      run: |
        cd topsky
        python manage.py check --deploy
    
    - name: Collect static files
      run: |
        cd topsky
        python manage.py collectstatic --noinput
    
    # Add deployment steps here based on your hosting platform
    # Examples:
    # - For Heroku:
    # - name: Deploy to Heroku
    #   uses: akhileshns/heroku-deploy@v3.12.14
    #   with:
    #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
    #     heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
    #     heroku_email: ${{ secrets.HEROKU_EMAIL }}
    #
    # - For Railway:
    # - name: Deploy to Railway
    #   run: |
    #     curl -X POST ${{ secrets.RAILWAY_WEBHOOK_URL }}
    #
    # - For DigitalOcean App Platform:
    # - name: Deploy to DigitalOcean
    #   run: |
    #     # Add your deployment commands here 